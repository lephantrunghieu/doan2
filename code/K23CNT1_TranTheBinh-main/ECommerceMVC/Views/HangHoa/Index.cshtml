@model IEnumerable<ECommerceMVC.ViewModels.HangHoaVM>

@{
	ViewData["Title"] = "Index";
	Layout = "_DanhSachHangHoa";
}

<!-- Single Page Header start -->
@section BreadCum {
	<div class="container-fluid page-header py-5">
		<h1 class="text-center text-white display-6">Sản phẩm</h1>
		<ol class="breadcrumb justify-content-center mb-0">
			<li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
			<li class="breadcrumb-item active text-white">Shop</li>
		</ol>
	</div>
}
<!-- Single Page Header End -->

@await Html.PartialAsync("ProductItem", Model)

<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        @if (ViewBag.TotalPages > 1)
        {
            @if (ViewBag.CurrentPage != 1)
            {
                <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" asp-route-loai="@ViewBag.CurrentLoai"
                   class="rounded @(ViewBag.CurrentPage == 1 ? "disabled" : "")">&laquo;</a>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <a asp-action="Index" asp-route-page="@i" asp-route-loai="@ViewBag.CurrentLoai"
                   class="rounded @(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
            }

            @if (ViewBag.CurrentPage != ViewBag.TotalPages)
            {
                <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" asp-route-loai="@ViewBag.CurrentLoai"
                   class="rounded @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">&raquo;</a>
            }
        }
    </div>
</div>